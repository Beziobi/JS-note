--> Loops 
Loops are handy, if you want to run the same code over and over again, each 
time with a different value.

-> Different Kinds of Loops
JavaScript supports different kinds of loops:
for - loops through a block of code a number of times
for/in - loops through the properties of an object
for/of - loops through the values of an iterable object
while - loops through a block of code while a specified condition is true
do/while - also loops through a block of code while a specified condition is true

-> The for loops 
The for statement creates a loop with 3 optional expressions:

** Syntax 
for (expression 1; expression 2; expression 3) {
  // code block to be executed
}

*Discription of syntax 

Expression 1 is executed (one time) before the execution of the code block.
Expression 2 defines the condition for executing the code block.
Expression 3 is executed (every time) after the code block has been executed.

* Example 
for (let i = 0; i < 5; i++) {
  text += "The number is " + i + "<br>";
}
From the example above, you can read:
Expression 1 sets a variable before the loop starts (let i = 0).
Expression 2 defines the condition for the loop to run (i must be less than 5).
Expression 3 increases a value (i++) each time the code block in the loop has been executed.

-> For/Of and For/In Loops
The for/in loop and the for/of loop are explained in the next chapter.

-> For in loop 
The JavaScript for in statement loops through the properties of an Object:
Do not use for in over an Array if the index order is important.
The index order is implementation-dependent, and array values may not be accessed in the 
order you expect.
It is better to use a for loop, a for of loop, or Array.forEach() when the order is 
important.

** Syntax
for (key in object) {
  // code block to be executed
}


-> The for of loop
The JavaScript for of statement loops through the values of an iterable object.
It lets you loop over iterable data structures such as Arrays, Strings, Maps, NodeLists, 
and more:

** Syntax
for (variable of iterable) {
  // code block to be executed
}



The While Loop
The while loop and the do/while loop are explained in the next chapter.